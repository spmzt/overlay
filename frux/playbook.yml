---
    - include_vars:
        file: jail_ipam.yml
        name: jail_ipam
    - name: Create FreeBSD dist directory
      file:
        path: /usr/freebsd-dist/
        state: directory
    - name: Download FreeBSD 13.2 MANIFEST file (Make bsdinstall more atomic)
      shell: fetch https://download.freebsd.org/ftp/releases/amd64/13.2-RELEASE/MANIFEST -o /usr/freebsd-dist/MANIFEST
      async: 400
      poll: 10
      when:
        - jail_dist_download
    - name: Download FreeBSD 13.2 base.txz file (Make bsdinstall more atomic)
      shell: fetch https://download.freebsd.org/ftp/releases/amd64/13.2-RELEASE/base.txz -o /usr/freebsd-dist/base.txz
      async: 400
      poll: 10
      when:
        - jail_dist_download
    - name: create zfs jails dataset
      community.general.zfs:
        name: zroot/jails
        state: present
        extra_zfs_properties:
          mountpoint: /usr/local/jails
    - name: create zfs per jail dataset
      community.general.zfs:
        name: "zroot/jails/{{ item }}"
        state: present
      loop: "{{ jails |  flatten(levels=1) }}"
    - name: Configure Devfs
      ansible.builtin.template:
        src: frux/devfs-template.j2
        dest: /etc/devfs.conf
    - name: install jib script
      copy:
        src: /usr/share/examples/jails/jib
        dest: /usr/local/bin/
        remote_src: yes
        mode: 0755
    - name: clone epair interfaces
      community.general.sysrc:
        name: cloned_interfaces 
        value: "{% for jail in jails %} epair{{ (loop.index * 2) - 1 }} epair{{ (loop.index * 2) }}{% endfor %}"
        state: value_present
    - name: set ifconfig epair*a interfaces
      community.general.sysrc:
        name: "ifconfig_epair{{ item['epair'] }}a"
        value: "inet name e{{ item['epair'] }}a_{{ item['jail'] }} -tso -rxcsum {% if ( item['epair'] % 2 ) == 1 %}fib 1{% endif %}"
        state: present
      with_items:
        - "{% set epairs = [] %}{% for jail in jails %}{{ epairs.append({ 'epair': ((loop.index * 2) - 1), 'jail': jail })}}{{ epairs.append({ 'epair': (loop.index * 2), 'jail': jail })}}{% endfor %}{{ epairs }}"
    - name: set ifconfig epair*b interfaces
      community.general.sysrc:
        name: "ifconfig_epair{{ item['epair'] }}b"
        value: "inet name e{{ item['epair'] }}b_{{ item['jail'] }} -tso -rxcsum {% if ( item['epair'] % 2 ) == 1 %}fib 1{% endif %}"
        state: present
      with_items:
        - "{% set epairs = [] %}{% for jail in jails %}{{ epairs.append({ 'epair': ((loop.index * 2) - 1), 'jail': jail })}}{{ epairs.append({ 'epair': (loop.index * 2), 'jail': jail })}}{% endfor %}{{ epairs }}"
    - name: declare jails
      ansible.builtin.template:
        src: frux/jail-template.j2
        dest: /etc/jail.conf
    - name: start jails at startup
      community.general.sysrc:
        name: "jail_enable"
        value: "YES"
    - name: start jails
      shell: service jail start "{{ item }}"
      loop: "{{ jails | flatten(levels=1) }}"
    - name: Create SSH directory
      file:
        path: /root/.ssh
        state: directory
    - name: Copy SSH Key
      ansible.builtin.copy:
        src: authorized_keys
        dest: /root/.ssh/authorized_keys